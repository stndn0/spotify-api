{"ast":null,"code":"var _jsxFileName = \"/home/wolv/repos/spotify-api/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getSpotifyAuthResponse } from '../helpers/parseSpotifyAuthResponse';\n\n// https://dev.to/dom_the_dev/how-to-use-the-spotify-api-in-your-react-js-app-50pn#authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  // This is the query sent by the client to the Spotify authentication server.\n  const query = {\n    \"client_id\": \"edcd5a7d1ed6481ebf796b856adaefcf\",\n    \"auth_endpoint\": \"https://accounts.spotify.com/authorize\",\n    \"response_type\": \"token\",\n    \"redirect_uri\": \"http://localhost:3000/\",\n    \"scope\": \"user-follow-read\",\n    \"show_dialog\": \"true\"\n  };\n\n  // Store the spotify auth token as a state variable. \n  // No token (i.e. unauthorized) will default to 0.\n  const [token, setToken] = useState(0);\n\n  // Code within useEffect will execute whenever the page is re-rendered.\n  useEffect(() => {\n    // Run if the browser url has some data within it (e.g. URL recieved from spotify auth)\n    if (window.location.hash) {\n      // Object destructuring. Helper function is called and the returned variables are stored.\n      // Note that tokens are valid for 1 hour. \n      const {\n        access_token,\n        expires_in,\n        token_type\n      } = getSpotifyAuthResponse(window.location.hash);\n\n      // Note - not 100% sure if I really need localStorage. Will come back to this.\n      localStorage.clear();\n      localStorage.setItem(\"accessToken\", access_token);\n      localStorage.setItem(\"tokenType\", token_type);\n      localStorage.setItem(\"expiresIn\", expires_in);\n      setToken(access_token);\n      console.log(\"DEBUG TOKEN: \", access_token);\n    }\n  });\n  const authButton = () => {\n    if (token === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"authButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Not logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Token and storage data has been cleared client side. Note that this app is still connected to your Spotify account. You can disconnect the app via your Spotify 'Manage Apps' setting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    } else {\n      // Remove hashes from the URL bar to stop the useEffect 'if' condition from firing.\n      window.history.replaceState({}, document.title, \" \");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"authButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTokenAndData(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const deleteTokenAndData = () => {\n    localStorage.clear();\n    setToken(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `${query.auth_endpoint}?client_id=${query.client_id}&redirect_uri=${query.redirect_uri}&response_type=${query.response_type}&scope=${query.scope}`,\n      children: \"Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), authButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n// https://accounts.spotify.com/authorize?client_id=edcd5a7d1ed6481ebf796b856adaefcf?show_dialog=true\n// ^^^ note the last show_dialog=true query here\n\n// const testAPI = async () => {\n//   const result = await fetch('http://localhost:5000/api_login');\n//   const jsonResult = result.json();\n//   console.log(\"Got response\")\n//   console.log(jsonResult);\n// }\n_s(Home, \"okLHkE8hkIYo3+XjLGmXLoI3cT0=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","getSpotifyAuthResponse","Home","query","token","setToken","window","location","hash","access_token","expires_in","token_type","localStorage","clear","setItem","console","log","authButton","history","replaceState","document","title","deleteTokenAndData","auth_endpoint","client_id","redirect_uri","response_type","scope"],"sources":["/home/wolv/repos/spotify-api/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getSpotifyAuthResponse } from '../helpers/parseSpotifyAuthResponse';\n\n\n// https://dev.to/dom_the_dev/how-to-use-the-spotify-api-in-your-react-js-app-50pn#authentication\n\nexport default function Home() {\n  // This is the query sent by the client to the Spotify authentication server.\n  const query =\n  {\n    \"client_id\": \"edcd5a7d1ed6481ebf796b856adaefcf\",\n    \"auth_endpoint\": \"https://accounts.spotify.com/authorize\",\n    \"response_type\": \"token\",\n    \"redirect_uri\": \"http://localhost:3000/\",\n    \"scope\": \"user-follow-read\",\n    \"show_dialog\": \"true\"\n  }\n\n  // Store the spotify auth token as a state variable. \n  // No token (i.e. unauthorized) will default to 0.\n  const [token, setToken] = useState(0);\n\n  // Code within useEffect will execute whenever the page is re-rendered.\n  useEffect(() => {\n    // Run if the browser url has some data within it (e.g. URL recieved from spotify auth)\n    if (window.location.hash) {\n      // Object destructuring. Helper function is called and the returned variables are stored.\n      // Note that tokens are valid for 1 hour. \n      const { access_token, expires_in, token_type } = getSpotifyAuthResponse(window.location.hash);\n\n      // Note - not 100% sure if I really need localStorage. Will come back to this.\n      localStorage.clear();\n      localStorage.setItem(\"accessToken\", access_token);\n      localStorage.setItem(\"tokenType\", token_type);\n      localStorage.setItem(\"expiresIn\", expires_in);\n      setToken(access_token)\n\n      console.log(\"DEBUG TOKEN: \", access_token)\n    }\n  })\n\n  const authButton = () => {\n    if (token === 0) {\n      return (\n        <div id=\"authButton\">\n          <h2>Not logged in.</h2>\n          <p>Token and storage data has been cleared client side. Note that this app is still connected to your Spotify account. You can disconnect the app via your Spotify 'Manage Apps' setting.</p>\n        </div>\n      )\n    }\n    else {\n      // Remove hashes from the URL bar to stop the useEffect 'if' condition from firing.\n      window.history.replaceState({},document.title, \" \");\n      return (\n        <div id=\"authButton\">\n          <h2>Logged in.</h2>\n          <button onClick={() => deleteTokenAndData()}>Logout</button>\n        </div>\n      )\n    }\n  }\n\n  const deleteTokenAndData = () => {\n    localStorage.clear();\n    setToken(0);\n  }\n\n\n  return (\n    <div>\n      <h1>Homepage</h1>\n      <a href=\n        {`${query.auth_endpoint}?client_id=${query.client_id}&redirect_uri=${query.redirect_uri}&response_type=${query.response_type}&scope=${query.scope}`}\n      >Authorize</a>\n\n      <br></br>\n      <h2>{token}</h2>\n      {authButton()}\n    </div>\n  )\n}\n\n\n// https://accounts.spotify.com/authorize?client_id=edcd5a7d1ed6481ebf796b856adaefcf?show_dialog=true\n// ^^^ note the last show_dialog=true query here\n\n\n// const testAPI = async () => {\n//   const result = await fetch('http://localhost:5000/api_login');\n//   const jsonResult = result.json();\n//   console.log(\"Got response\")\n//   console.log(jsonResult);\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,qCAAqC;;AAG5E;AAAA;AAEA,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B;EACA,MAAMC,KAAK,GACX;IACE,WAAW,EAAE,kCAAkC;IAC/C,eAAe,EAAE,wCAAwC;IACzD,eAAe,EAAE,OAAO;IACxB,cAAc,EAAE,wBAAwB;IACxC,OAAO,EAAE,kBAAkB;IAC3B,aAAa,EAAE;EACjB,CAAC;;EAED;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,MAAM,CAACC,QAAQ,CAACC,IAAI,EAAE;MACxB;MACA;MACA,MAAM;QAAEC,YAAY;QAAEC,UAAU;QAAEC;MAAW,CAAC,GAAGV,sBAAsB,CAACK,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;;MAE7F;MACAI,YAAY,CAACC,KAAK,EAAE;MACpBD,YAAY,CAACE,OAAO,CAAC,aAAa,EAAEL,YAAY,CAAC;MACjDG,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEH,UAAU,CAAC;MAC7CC,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEJ,UAAU,CAAC;MAC7CL,QAAQ,CAACI,YAAY,CAAC;MAEtBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,YAAY,CAAC;IAC5C;EACF,CAAC,CAAC;EAEF,MAAMQ,UAAU,GAAG,MAAM;IACvB,IAAIb,KAAK,KAAK,CAAC,EAAE;MACf,oBACE;QAAK,EAAE,EAAC,YAAY;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,eACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA6L;MAAA;QAAA;QAAA;QAAA;MAAA,QACzL;IAEV,CAAC,MACI;MACH;MACAE,MAAM,CAACY,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAACC,QAAQ,CAACC,KAAK,EAAE,GAAG,CAAC;MACnD,oBACE;QAAK,EAAE,EAAC,YAAY;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACnB;UAAQ,OAAO,EAAE,MAAMC,kBAAkB,EAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD;IAEV;EACF,CAAC;EAED,MAAMA,kBAAkB,GAAG,MAAM;IAC/BV,YAAY,CAACC,KAAK,EAAE;IACpBR,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAGD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAG,IAAI,EACH,GAAEF,KAAK,CAACoB,aAAc,cAAapB,KAAK,CAACqB,SAAU,iBAAgBrB,KAAK,CAACsB,YAAa,kBAAiBtB,KAAK,CAACuB,aAAc,UAASvB,KAAK,CAACwB,KAAM,EAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACxI,eAEd;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UAAKvB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,EACfa,UAAU,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA,GAtFwBf,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}