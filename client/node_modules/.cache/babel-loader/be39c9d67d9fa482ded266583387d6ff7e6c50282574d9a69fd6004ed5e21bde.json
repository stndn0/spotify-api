{"ast":null,"code":"// When the user logs into Spotify, Spotify will return a URL that contains a token.\n// We need to extract this access token from the URL. Below is a helper function to achieve that.\nexport const getSpotifyAuthResponse = hash => {\n  // Example URL - localhost:3000/#access_token=BQDvbd1UySh2eL4&token_type=Bearer&expires_in=3600\n  const strAfterHashtag = hash.substring(1);\n  const paramsInUrl = strAfterHashtag.split(\"&\");\n\n  // This accumulater should return three values - token, expires_in and the token type.\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\n    // console.log(\"Debug: \", currentValue)\n    const [key, value] = currentValue.split(\"=\");\n    accumulater[key] = value;\n    return accumulater;\n  }, {});\n  return paramsSplitUp;\n};\nfunction removeHash() {\n  history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n}","map":{"version":3,"names":["getSpotifyAuthResponse","hash","strAfterHashtag","substring","paramsInUrl","split","paramsSplitUp","reduce","accumulater","currentValue","key","value","removeHash","history","pushState","document","title","window","location","pathname","search"],"sources":["/home/wolv/repos/spotify-api/client/src/helpers/parseSpotifyAuthResponse.js"],"sourcesContent":["// When the user logs into Spotify, Spotify will return a URL that contains a token.\n// We need to extract this access token from the URL. Below is a helper function to achieve that.\nexport const getSpotifyAuthResponse = (hash) => {\n  // Example URL - localhost:3000/#access_token=BQDvbd1UySh2eL4&token_type=Bearer&expires_in=3600\n  const strAfterHashtag = hash.substring(1);\n  const paramsInUrl = strAfterHashtag.split(\"&\");\n\n  // This accumulater should return three values - token, expires_in and the token type.\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\n    // console.log(\"Debug: \", currentValue)\n    const [key, value] = currentValue.split(\"=\");\n    accumulater[key] = value;\n    return accumulater;\n  }, {})\n\n  return paramsSplitUp;\n}\n\n\nfunction removeHash() {\n  history.pushState(\"\", document.title, window.location.pathname\n    + window.location.search);\n}"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EAC9C;EACA,MAAMC,eAAe,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;EACzC,MAAMC,WAAW,GAAGF,eAAe,CAACG,KAAK,CAAC,GAAG,CAAC;;EAE9C;EACA,MAAMC,aAAa,GAAGF,WAAW,CAACG,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAK;IACtE;IACA,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,YAAY,CAACJ,KAAK,CAAC,GAAG,CAAC;IAC5CG,WAAW,CAACE,GAAG,CAAC,GAAGC,KAAK;IACxB,OAAOH,WAAW;EACpB,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAOF,aAAa;AACtB,CAAC;AAGD,SAASM,UAAU,GAAG;EACpBC,OAAO,CAACC,SAAS,CAAC,EAAE,EAAEC,QAAQ,CAACC,KAAK,EAAEC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAC1DF,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}