{"ast":null,"code":"// When the user logs into Spotify, Spotify will return a URL that contains a token.\n// We need to extract this access token from the URL. Below is a helper function to achieve that.\nexport const getSpotifyAuthResponse = hash => {\n  // Example URL - localhost:3000/#access_token=BQDvbd1UySh2eL4&token_type=Bearer&expires_in=3600\n  const strAfterHashtag = hash.substring(1);\n  const paramsInUrl = strAfterHashtag.split(\"&\");\n\n  // This accumulater should return three values - token, expires_in and the token type.\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\n    console.log(\"Debug: \", currentValue);\n    const [key, value] = currentValue.split(\"=\");\n    accumulater[key] = value;\n    return accumulater;\n  }, {});\n  console.log(\"HELPERRRRRRRRRRRRRRR\");\n  return paramsSplitUp;\n};","map":{"version":3,"names":["getSpotifyAuthResponse","hash","strAfterHashtag","substring","paramsInUrl","split","paramsSplitUp","reduce","accumulater","currentValue","console","log","key","value"],"sources":["/home/wolv/repos/spotify-api/client/src/helpers/parseSpotifyAuthResponse.js"],"sourcesContent":["  // When the user logs into Spotify, Spotify will return a URL that contains a token.\n  // We need to extract this access token from the URL. Below is a helper function to achieve that.\n  export const getSpotifyAuthResponse = (hash) => {\n    // Example URL - localhost:3000/#access_token=BQDvbd1UySh2eL4&token_type=Bearer&expires_in=3600\n    const strAfterHashtag = hash.substring(1);\n    const paramsInUrl = strAfterHashtag.split(\"&\");\n\n    // This accumulater should return three values - token, expires_in and the token type.\n    const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\n      console.log(\"Debug: \", currentValue)\n      const [key, value] = currentValue.split(\"=\");\n      accumulater[key] = value;\n      return accumulater;\n    }, {})\n\n    console.log(\"HELPERRRRRRRRRRRRRRR\")\n\n    return paramsSplitUp;\n  }"],"mappings":"AAAE;AACA;AACA,OAAO,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EAC9C;EACA,MAAMC,eAAe,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;EACzC,MAAMC,WAAW,GAAGF,eAAe,CAACG,KAAK,CAAC,GAAG,CAAC;;EAE9C;EACA,MAAMC,aAAa,GAAGF,WAAW,CAACG,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAK;IACtEC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,YAAY,CAAC;IACpC,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,GAAGJ,YAAY,CAACJ,KAAK,CAAC,GAAG,CAAC;IAC5CG,WAAW,CAACI,GAAG,CAAC,GAAGC,KAAK;IACxB,OAAOL,WAAW;EACpB,CAAC,EAAE,CAAC,CAAC,CAAC;EAENE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAEnC,OAAOL,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}